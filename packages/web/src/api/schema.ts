/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  "/blog/posts": {
    /** Return all blog posts based on the query */
    get: {
      parameters: {
        query: {
          /** The page to load */
          page: number;
          /** How many posts to load */
          limit: number;
          /** A string to be searched */
          search: string;
          /** Whether or not to only return preview data */
          preview: boolean;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              posts: components["schemas"]["Post"][];
              numPages: number;
              page: number;
            };
          };
        };
      };
    };
  };
  [key: `/blog/posts/${string}`]: {
    /** Return a single blog post */
    get: {
      parameters: {
        path: {
          /** The post id */
          id: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              post: components["schemas"]["Post"];
            };
          };
        };
      };
    };
  };
  "/blog/tags": {
    /** A distinct view of all available tags */
    get: {
      responses: {
        200: {
          content: {
            "application/json": {
              tags?: string[];
            };
          };
        };
      };
    };
  };
  "/admin/index/login": {
    /** Login with credentials */
    post: {
      responses: {
        /** Return login details */
        200: {
          content: {
            "application/json": {
              user: string;
              token: string;
            };
          };
        };
      };
      requestBody: {
        content: {
          "application/json": {
            username: string;
            password: string;
          };
        };
      };
    };
  };
  "/admin/index/changePassword": {
    /** Change login credentials */
    post: {
      responses: {
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
      };
      requestBody: {
        content: {
          "application/json": {
            password: string;
          };
        };
      };
    };
  };
  "/admin/blog/posts": {
    /** Receive all drafted posts */
    get: {
      parameters: {
        query: {
          /** The page to load */
          page?: number;
          /** Maximum amount of posts to load */
          limit?: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              posts: components["schemas"]["Post"][];
              numPages: number;
              page: number;
            };
          };
        };
      };
    };
    /** Create a new post */
    post: {
      responses: {
        200: {
          content: {
            "application/json": {
              post: {
                _id: string;
                draft: { [key: string]: unknown };
                createdAt: number;
              };
            };
          };
        };
      };
    };
  };
  [key: `/admin/blog/posts/${string}/edit`]: {
    /** Update a single post */
    post: {
      parameters: {
        path: {
          /** The post id */
          id: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              post: {
                post: components["schemas"]["Post"];
              };
            };
          };
        };
      };
      requestBody: {
        content: {
          "application/json": {
            title?: string;
            text?: string;
            html?: string;
            image?: string;
            tags?: string[];
          };
        };
      };
    };
    /** Delete a single blog post */
    delete: {
      parameters: {
        path: {
          /** The post id */
          id: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              post: components["schemas"]["Post"];
            };
          };
        };
      };
    };
  };
  [key: `/admin/blog/posts/${string}/draft`]: {
    /** Delete a single blog post draft */
    delete: {
      parameters: {
        path: {
          /** The post id */
          id: string;
        };
      };
    };
  };
  [key: `/admin/blog/posts/${string}/publish`]: {
    /** Publishes the current draft of a post */
    post: {
      parameters: {
        path: {
          /** The post id */
          id: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              post: components["schemas"]["Post"];
            };
          };
        };
      };
    };
  };
  [key: `/admin/blog/posts/${string}/unpublish`]: {
    /** Removes the current published version of a post and moves it to draft. */
    delete: {
      parameters: {
        path: {
          /** The post id */
          id: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json": {
              post: components["schemas"]["Post"];
            };
          };
        };
      };
    };
  };
  [key: `/admin/blog/posts/${string}/upload`]: {
    /** Upload a new file */
    post: {
      parameters: {
        path: {
          /** The post id */
          id: string;
        };
        query: {
          /** Force the file extension */
          ext?: string;
          /** Maximum width or height */
          max_size?: string;
          /** Quality of the image (1-100) */
          quality?: string;
        };
      };
      responses: {
        /** Return login details */
        200: {
          content: {
            "application/json": {
              src: string;
              fileName: string;
              fileSize: number;
            };
          };
        };
      };
      requestBody: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            data?: string;
          };
        };
      };
    };
  };
  "/rss": {
    /** Return a single blog post */
    get: {
      parameters: {
        path: {
          /** The current feed tag */
          tag: string;
        };
      };
    };
  };
  "/rss.xml": {
    /** Return a single blog post */
    get: {
      parameters: {
        path: {
          /** The current feed tag */
          tag: string;
        };
      };
    };
  };
  [key: `/rss/${string}`]: {
    /** Return a single blog post */
    get: {
      parameters: {
        path: {
          /** The current feed tag */
          tag: string;
        };
      };
    };
  };
  [key: `/rss/${string}.xml`]: {
    /** Return a single blog post */
    get: {
      parameters: {
        path: {
          /** The current feed tag */
          tag: string;
        };
      };
    };
  };
};

export type components = {
  schemas: {
    PostContent: {
      html: string;
      publishedAt: number;
      title: string;
      text: string;
      tags: string[];
      image: string;
      version: number;
      summary: string;
    };
    Post: {
      draft: components["schemas"]["PostContent"];
      _id: string;
      createdAt: number;
      published: components["schemas"]["PostContent"];
    };
  };
};

export type operations = {};

export type external = {};
