---
import type { StreamingDistributionList } from "@aws-sdk/client-cloudfront";
import Icon from "./Icon.astro";

interface Props {
  id: string;
  icon?: string;
  to?: string;
  variant?: "contained" | "outlined" | "text";
  disabled?: boolean;
}

const { id, to, icon, variant = "text", disabled } = Astro.props;
---

<div class="overflow-hidden rounded-md">
  {
    to ? (
      <a href={to}>
        <button
          id={id}
          class:list={[
            "base",
            variant,
            icon && "icon",
            !Astro.slots.has("default") && "empty",
          ]}
          disabled={disabled}
        >
          {icon ? <Icon icon={icon} /> : null}
          <slot />
        </button>
      </a>
    ) : (
      <button
        id={id}
        class:list={[
          "base",
          variant,
          icon && "icon",
          !Astro.slots.has("default") && "empty",
        ]}
        disabled={disabled}
      >
        {icon ? <Icon icon={icon} /> : null}
        <slot />
      </button>
    )
  }
</div>

<style>
  .base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    position: relative;
    box-sizing: border-box;
    outline: 0;
    border: 0;
    margin: 0;
    border-radius: 0;
    padding: 0;
    cursor: pointer;
    user-select: none;
    vertical-align: middle;
    text-decoration: none;
    font-weight: 500;
    text-transform: uppercase;
    min-width: 32px;
    border-radius: 6px;

    &.icon.empty {
      border-radius: 50%;
      padding: 3px;
    }

    &.icon:not(.empty) {
      svg {
        margin-right: 8px;
      }
    }
  }

  .base[disabled] {
    background-color: rgba(0, 0, 0, 0.18);
  }

  .contained {
    background-color: var(--tw-color-primary);
    padding: 6px 16px;
    transition:
      background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
      border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    color: rgb(255, 255, 255);
    box-shadow:
      rgb(0 0 0 / 20%) 0px 3px 1px -2px,
      rgb(0 0 0 / 14%) 0px 2px 2px 0px,
      rgb(0 0 0 / 12%) 0px 1px 5px 0px;
  }

  .contained:hover {
    text-decoration: none;
    opacity: 0.8;
    box-shadow:
      rgb(0 0 0 / 20%) 0px 2px 4px -1px,
      rgb(0 0 0 / 14%) 0px 4px 5px 0px,
      rgb(0 0 0 / 12%) 0px 1px 10px 0px;
  }

  .outlined {
    background-color: var(--tw-color-primary);
    padding: 6px 16px;
    transition:
      background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
      border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  }

  .text {
    color: var(--tw-color-primary);

    padding: 6px 8px;
    transition:
      background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
      border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    &.icon {
      color: inherit;
    }
  }

  .text:hover {
    text-decoration: none;
    background-color: rgba(255, 87, 10, 0.04);
  }
</style>
